import streamlit as st
from typing import Dict, Any
from src.api.document_constructor import DocumentConstructor

class DocumentConstructorUI:
    def __init__(self):
        self.constructor = DocumentConstructor()

    def display_request_status(self, doc_id: str):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
        status = self.constructor.get_request_status(doc_id)
        if status:
            with st.expander("–°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–æ–≤"):
                for request_type, state in status.items():
                    icon = {
                        'processing': '‚è≥',
                        'success': '‚úÖ',
                        'error': '‚ùå'
                    }.get(state, '‚ùì')
                    st.write(f"{icon} {request_type}: {state}")

    def display_document_generation_form(self, document_data: Dict[str, Any]):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        doc_id = str(document_data.get('ID', 'unknown'))
        st.subheader(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ({doc_id})")
        
        self.display_request_status(doc_id)
        
        with st.expander("–î–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"):
            st.json(document_data)
            
        if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã", key=f"gen_btn_{doc_id}"):
            with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤..."):
                result = self.constructor.generate_documents(document_data)
                if result:
                    st.session_state.generated_documents = result
                    st.success("–î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
                    st.rerun()

    def display_generated_documents(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        if 'generated_documents' not in st.session_state:
            return

        documents = st.session_state.generated_documents
        st.subheader("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã")
        
        doc_id = str(documents.get('merged_data', {}).get('ID', 'unknown'))
        self.display_request_status(doc_id)

        for doc in documents.get('documents', []):
            col1, col2 = st.columns([3, 1])
            
            with col1:
                st.write(f"üìÑ {doc['name']}")
                
            with col2:
                content = self.constructor.download_document(doc['url'], doc_id)
                if content:
                    mime_type = self.constructor.get_mime_type(doc['format'])
                    if st.download_button(
                        label=f"–°–∫–∞—á–∞—Ç—å {doc['format'].upper()}",
                        data=content,
                        file_name=f"{doc['name']}.{doc['format']}",
                        mime=mime_type,
                        key=f"download_{doc['name']}"
                    ):
                        st.success(f"–§–∞–π–ª {doc['name']} —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω") 